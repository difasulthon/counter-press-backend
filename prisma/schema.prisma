// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  fullName String
  userName String @unique
  email    String @unique
  address  String?
  city     String?
  phoneNumber String?

  password Password?

  carts Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Password {
  id String @id @default(cuid())

  hash String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("passwords")
}

model Brand {
  id        String    @id @default(cuid())

  slug      String    @unique @db.VarChar(128)
  name      String    @db.VarChar(128)
  products  Product[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("brands")
}

model Product {
  id       String   @id @default(cuid())

  slug     String   @unique @db.VarChar(128)
  name     String   @db.VarChar(128)
  price    Int      @db.Integer
  image    String   @db.Text
  stock    Int      @db.Integer

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  brandId   String
  brandName String
  brand     Brand?   @relation(fields: [brandId], references: [id])

  cartItems CartItem[]

  @@map("products")
}

model CartItem {
  id String @id @default(cuid())

  product   Product @relation(fields: [productId], references: [id])
  productId String

  quantity Int @default(1)

  cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cartItems")
}

model Cart {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carts")
}
